# Script to perform VIIRS 2013 extractions 
apiVersion: batch/v1
kind: Job
metadata:
  name: xavier-ssl-modis-2010-train-debug
spec:
  backoffLimit: 0
  template:
    spec:
      containers:
      - name: container
        image: localhost:30081/profxj/ulmo_nvidia:latest  # UPDATE
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "4"   # Should have used 4 instead of 2
            memory: "2Gi"  # 
            ephemeral-storage: 50Gi
          limits:
            cpu: "8"
            memory: "8Gi"
            ephemeral-storage: 100Gi
            nvidia.com/gpu:  "4"  # See docs to exlude certain types
        command: ["/bin/bash", "-c"]
        args:
          - cd ulmo; 
            git fetch;
            git checkout ssl_paper; 
            git pull; 
            python setup.py develop;
            cd ulmo/runs/SSL/MODIS/v2;
            aws --endpoint http://rook-ceph-rgw-nautiluss3.rook s3 cp s3://modis-l2/PreProc/MODIS_R2019_2010_95clear_128x128_preproc_std.h5 ./;
            python ./ssl_modis_v2.py --opt_path ./experiments/modis_model_v2/opts_2010.json --func_flag train --debug;
            aws --endpoint http://rook-ceph-rgw-nautiluss3.rook s3 cp models s3://modis-l2/SSL --recursive --force;
        env:
          - name: "ENDPOINT_URL"
            value: "http://rook-ceph-rgw-nautiluss3.rook"
          - name: "S3_ENDPOINT"
            value: "rook-ceph-rgw-nautiluss3.rook"
        volumeMounts:
          - name: prp-s3-credentials
            mountPath: "/root/.aws/credentials"
            subPath: "credentials"
          - name: ephemeral
            mountPath: "/tmp"
          - name: "dshm"
            mountPath: "/dev/shm"
      nodeSelector:
        nautilus.io/disktype: nvme
        gpu-type: "1080Ti"  # titan-xp
      restartPolicy: Never
      volumes:
        # Secrets file for nautilus s3 credentials .aws/credentials and .s3cfg
        - name: prp-s3-credentials
          secret:
            secretName: prp-s3-credentials
        # Shared memory (necessary for Python's multiprocessing.shared_memory module to work)
        - name: dshm
          emptyDir:
            medium: Memory
        # Ephemeral storage
        - name: ephemeral
          emptyDir: {}
