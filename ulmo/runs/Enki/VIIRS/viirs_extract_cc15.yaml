# Script to extract viirs data from cc15
#  t10, p10
# kubectl exec -it test-pod -- /bin/bash
apiVersion: batch/v1
kind: Job
metadata:
  name: xavier-viirs-cc15-extract
spec:
  backoffLimit: 0
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                  - k8s-chase-ci-01.noc.ucsb.edu
              - key: nvidia.com/gpu.product
                operator: In
                values:
                  - NVIDIA-GeForce-RTX-3090
      containers:
      - name: container
        image: localhost:30081/profxj/mae_nvidia:latest  # UPDATE
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "20"   # Using at least 4
            memory: "64Gi"  # Using 
            ephemeral-storage: 400Gi
          limits:
            cpu: "20"
            memory: "128Gi"
            ephemeral-storage: 400Gi
            #nvidia.com/gpu:  "0"  # See docs to exlude certain types
        command: ["/bin/bash", "-c"]
            #command: ["sh", "-c", "sleep infinity"]
        args:
          - pip install tensorboard;
            pip3 install torch torchvision torchaudio --force-reinstall  --extra-index-url https://download.pytorch.org/whl/cu116;
            pip3 install cycler;
            pip install kiwisolver;
            pip install importlib-resources;
            cd ulmo; 
            git fetch;
            git checkout enki_real; 
            git pull; 
            pip install -e ".[dev]";
            cp ulmo/mae/correct_helpers.py /root/miniconda3/lib/python3.8/site-packages/timm/models/layers/helpers.py;
            cd ../tmp;
            mkdir foo;
            cd foo; 
            mkdir PreProc;   
            python -u /ulmo/ulmo/runs/Enki/VIIRS/enki_viirs.py 8
        env:
          - name: "ENDPOINT_URL"
            value: "http://rook-ceph-rgw-nautiluss3.rook"
          - name: "S3_ENDPOINT"
            value: "rook-ceph-rgw-nautiluss3.rook"
        volumeMounts:
          - name: prp-s3-credentials
            mountPath: "/root/.aws/credentials"
            subPath: "credentials"
          - name: ephemeral
            mountPath: "/tmp"
          - name: "dshm"
            mountPath: "/dev/shm"
      nodeSelector:
        nautilus.io/disktype: nvme
      restartPolicy: Never
      volumes:
        # Secrets file for nautilus s3 credentials .aws/credentials and .s3cfg
        - name: prp-s3-credentials
          secret:
            secretName: prp-s3-credentials
        # Shared memory (necessary for Python's multiprocessing.shared_memory module to work)
        - name: dshm
          emptyDir:
            medium: Memory
        # Ephemeral storage
        - name: ephemeral
          emptyDir: {}
